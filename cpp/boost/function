
function 库

在以下几种情况下使用Function库:
*   需要存储回调函数或者函数对象的时候.
*   希望将函数条用和实现解耦时, 例如GUI和实现之间的解耦.
    这才是重点吧...
*   希望存储由绑定器创建的函数对象, 以便于后续的调用或多次使用.


和函数指针相比优点
*   通过兼容的函数对象而不是严格的签名从而放松对签名的要求.
    确实方便不少.

*   可以使用绑定器，例如Boost.Bind 和 Boost.Lambda.

*   可以在调用函数之前检测函数是否为空 //函数指针不也是可以的吗?

*   可以使用带状态的对象, 而不仅仅限于无状态的函数.
    <<boost库导论>> 说具有static 成员的变量的函数不具备线程安全性.
    函数对象就是安全的了?
    我想,如果这个对象是值语义的, 那么多个实例化后，在多个线程内使用就是安全的.

付出的代价
*   空间是普通函数指针的3倍
*   Boost可能需要使用两次函数指针调用  //哪两次?
*   在某西需要与c库保持向后兼容的情形中, 函数指针可能是唯一的选择.

